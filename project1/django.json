{"#### Q1. To cache your entire site for an application in Django, you add all except which of these settings?\n": ["- [ ] django.middleware.common.CommonMiddleware\n", "- [ ] django.middleware.cache.UpdateCacheMiddleware\n", "- [ ] django.middleware.cache.FetchFromCacheMiddleware\n", "- [x] django.middleware.cache.AcceleratedCacheMiddleware\n"], "#### Q2. In which programming language is Django written?\n": ["- [ ] C++\n", "- [ ] Java\n", "- [x] Python\n", "- [ ] Ruby\n"], "#### Q3. To automatically provide a value for a field, or to do validation that requires access to more than a single field, you should override the `___` method in the `___` class.\n": ["- [ ] validate(); Model\n", "- [ ] group(); Model\n", "- [ ] validate(); Form\n", "- [x] clean(); Field\n"], "#### Q4. A client wants their site to be able to load \"Rick & Morty\" episodes by number or by title\u2014e.g., shows/3/3 or shows/picklerick. Which URL pattern do you recommend?\n": ["- [ ] <span>\n url(r'shows/<int:season>/<int:episode>/', views.episode_number),\n url(r'shows/<slug:episode_name>/', views.episode_name)\n", "- [x] <span>\n path('shows/<int:season>/<int:episode>/', views.episode_number),\npath(r'shows/<slug:episode_name>/', views.episode_name)\n", "- [ ] <span>\n path('shows/<int:season>/<int:episode>', views.episode_number),\n path(r'shows/<slug:episode_name>/', views.episode_number)\n", "- [ ] <span>\n url(r'^show/(?P<season>[0-9]+)/(?P<episode>[0-9]+)/$', views.episode_number),\n url(r'^show/(?P<episode_name>[-]+)/', views.episode_name \n"], "#### Q5. How do you determine at startup time if a piece of middleware should be used?\n": ["- [x] Raise MiddlewareNotUsed in the **init** function of your middleware.\n", "- [ ] Implement the not_used method in your middleware class.\n", "- [ ] List the middleware beneath an entry of django.middleware.IgnoredMiddleware.\n", "- [ ] Write code to remove the middleware from the settings in [app]/**init**.py.\n"], "#### Q6. How do you turn off Django\u2019s automatic HTML escaping for part of a web page?\n": ["- [ ] Place that section between paragraph tags containing the autoescape=off switch.\n", "- [ ] Wrap that section between { percentage mark autoescape off percentage mark} and {percentage mark endautoescape percentage mark} tags.\n", "- [ ] Wrap that section between {percentage mark autoescapeoff percentage mark} and {percentage mark endautoescapeoff percentage mark} tags.\n", "- [x] You don't need to do anything\u2014autoescaping is off by default.\n"], "#### Q7. Which step would NOT help you troubleshoot the error \"django-admin: command not found\"?\n": ["- [ ] Check that the bin folder inside your Django directory is on your system path.\n", "- [ ] Make sure you have activated the virtual environment you have set up containing Django.\n", "- [ ] Check that you have installed Django.\n", "- [x] Make sure that you have created a Django project.\n"], "#### Q8. Every time a user is saved, their quiz_score needs to be recalculated. Where might be an ideal place to add this logic?\n": ["- [ ] template\n", "- [x] model\n", "- [ ] database\n", "- [ ] view\n"], "#### Q9. What is the correct way to begin a class called \"Rainbow\" in Python?\n": ["- [ ] Rainbow {}\n", "- [ ] export Rainbow:\n", "- [x] class Rainbow:\n", "- [ ] def Rainbow:\n"], "#### Q10. You have inherited a Django project and need to get it running locally. It comes with a requirements.txt file containing all its dependencies. Which command should you use?\n": ["- [ ] django-admin startproject requirements.txt\n", "- [ ] python install -r requirements.txt\n", "- [x] pip install -r requirements.txt\n", "- [ ] pip install Django\n"], "#### Q11. Which best practice is NOT relevant to migrations?\n": ["- [x] To make sure that your migrations are up to date, you should run updatemigrations before running your tests.\n", "- [ ] You should back up your production database before running a migration.\n", "- [ ] Your migration code should be under source control.\n", "- [ ] If a project has a lot of data, you should test against a staging copy before running the migration on production.\n"], "#### Q12. What will this URL pattern match? url(r'^\\$', views.hello)\n": ["- [ ] a string beginning with the letter Ra string beginning with the letter R\n", "- [x] an empty string at the server root\n", "- [ ] a string containing ^ and $a string containing ^ and $\n", "- [ ] an empty string anywhere in the URLan empty string anywhere in the URL\n"], "#### Q13. What is the typical order of an HTTP request/response cycle in Django?\n": ["- [x] URL > view > template\n", "- [ ] form > model > view\n", "- [ ] template > view > model\n", "- [ ] URL > template > view > model\n"], "#### Q14. Django's class-based generic views provide which classes that implement common web development tasks?\n": ["- [ ] concrete\n", "- [ ] thread-safe\n", "- [x] abstract\n", "- [ ] dynamic\n"], "#### Q15. Which skills do you need to maintain a set of Django templates?\n": ["- [ ] template syntax\n", "- [x] HTML and template syntax\n", "- [ ] Python, HTML, and template syntax\n", "- [ ] Python and template syntax\n"], "#### Q16. How would you define the relationship between a star and a constellation in a Django model?\n": ["- [x] <span>\n class Star(models.Model):\n  name = models.CharField(max_length=100)\n class Constellation(models.Model): \n stars = models.ManyToManyField(Star)\n", "- [ ] <span>\n class Star(models.Model):\n constellation = models.ForeignKey(Constellation, \n on_delete=models.CASCADE)\n class Constellation(models.Model):\n stars = models.ForeignKey(Star, on_delete=models.CASCADE)\n", "- [ ] <span>\n class Star(models.Model):\n name = models.CharField(max_length=100)\n class Constellation(models.Model):\n stars = models.OneToManyField(Star)\n", "- [ ] <span>\n class Star(models.Model):\n constellation = models.ManyToManyField(Constellation)\n class Constellation(models.Model):\n name = models.CharField(max_length=100)\n"], "#### Q17. Which is NOT a valid step in configuring your Django 2.x instance to serve up static files such as images or CSS?\n": ["- [x] In your urls file, add a pattern that includes the name of your static directory.\n", "- [ ] Create a directory named static inside your app directory.\n", "- [ ] Create a directory named after the app under the static directory, and place static files inside.\n", "- [ ] Use the template tag {percentage mark load static percentage mark}.\n"], "#### Q18. What is the correct way to make a variable available to all of your templates?\n": ["- [ ] Set a session variable.\n", "- [ ] Use a global variable.\n", "- [ ] Add a dictionary to the template context.\n", "- [x] Use RequestContext.\n"], "#### Q19. Should you create a custom user model for new projects?\n": ["- [ ] No. Using a custom user model could break the admin interface and some third-party apps.\n", "- [ ] Yes. It is easier to make changes once it goes into production.\n", "- [x] No. Django's built-in models.User class has been tried and tested\u2014no point in reinventing the wheel.\n", "- [ ] Yes, as there is no other option.\n"], "#### Q20. You want to create a page that allows editing of two classes connected by a foreign key (e.g., a question and answer that reside in separate tables). What Django feature can you use?\n": ["- [x] actions\n", "- [ ] admin\n", "- [ ] mezcal\n", "- [ ] inlines\n"], "#### Q21. Why are QuerySets considered \"lazy\"?\n": ["- [ ] The results of a QuerySet are not ordered.\n", "- [x] QuerySets do not create any database activity until they are evaluated.\n", "- [ ] QuerySets do not load objects into memory until they are needed.\n", "- [ ] Using QuerySets, you cannot execute more complex queries.\n"], "#### Q22. You receive a `MultiValueDictKeyError` when trying to access a request parameter with the following code: request.GET['search_term']. Which solution will NOT help you in this scenario?\n": ["- [x] Switch to using POST instead of GET as the request method.\n", "- [ ] Make sure the input field in your form is also named \"search_term\".\n", "- [ ] Use MultiValueDict's GET method instead of hitting the dictionary directly like this: request.GET.get('search_term', '').\n", "- [ ] Check if the search_term parameter is present in the request before attempting to access it.\n"], "#### Q23. Which function of Django's Form class will render a form's fields as a series of <p> tags?\n": ["- [ ] show_fields()\n", "- [x] as_p()\n", "- [ ] as_table()\n", "- [ ] fields()\n"], "#### Q24. You have found a bug in Django and you want to submit a patch. Which is the correct procedure?\n": ["- [ ] Fork the Django repository GitHub.\n", "- [ ] Submit a pull request.\n", "- [x] all of these answers.\n", "- [ ] Run Django's test suite.\n"], "#### Q25. Django supplies sensible default values for settings. In which Python module can you find these settings?\n": ["- [ ] django.utils.default_settings.py\n", "- [ ] django.utils.global_settings.py\n", "- [ ] django.conf.default_settings.py\n", "- [x] django.conf.global_settings.py\n"], "#### Q26. Which variable name is best according to PEP 8 guidelines?\n": ["- [ ] numFingers\n", "- [ ] number-of-Fingers\n", "- [x] number_of_fingers\n", "- [ ] finger_num\n"], "#### Q27. A project has accumulated 500 migrations. Which course of action would you pursue?\n": ["- [ ] Manually merge your migration files to reduce the number\n", "- [ ] Don't worry about the number\n", "- [ ] Try to minimize the number of migrations\n", "- [x] Use squashmigrations to reduce the number\n"], "#### Q28. What does an F() object allow you when dealing with models?\n": ["- [x] perform db operations without fetching a model object\n", "- [ ] define db transaction isolation levels\n", "- [ ] use aggregate functions more easily\n", "- [ ] build reusable QuerySets\n"], "#### Q29. Which is not a Django filed type for integers?\n": ["- [ ] SmallIntegerField\n", "- [x] NegativeIntegerField\n", "- [ ] BigAutoField\n", "- [ ] PositiveIntegerField\n"], "#### Q30. Which will show the currently installed version?\n": ["- [ ] print (django.version)\n", "- [ ] import django django.getVersion()\n", "- [x] import django django.get_version()\n", "- [ ] python -c django --version\n"], "#### Q31. You should use the http method `___` to read data and `___` to update or create data\n": ["- [ ] READ; WRITE\n", "- [x] GET; POST\n", "- [ ] POST; GET\n", "- [ ] GET; PATCH\n"], "#### Q32. When should you employ the POST method over GET for submitting data?\n": ["- [ ] when efficiency is important\n", "- [ ] when you want the data to be cached\n", "- [ ] when you want to use your browser to help with debugging\n", "- [x] when the data in the form may be sensitive\n"], "#### Q33. When to use the Django sites framework?\n": ["- [x] if your single installation powers more than one site\n", "- [ ] if you need to serve static as well as dynamic content\n", "- [ ] if you want your app have a fully qualified domain name\n", "- [ ] if you are expecting more than 10.000 users\n"], "#### Q34. Which infrastructure do you need:\n `title=models.charfield(max_length=100, validators=[validate_spelling])`\n": ["- [ ] inizialized array called validators\n", "- [x] a validators file containing a function called validate_spelling imported at the top of model\n", "- [ ] a validators file containing a function called validate imported at the top of model\n", "- [ ] spelling package imported at the top of model\n"], "#### Q35. What decorator is used to require that a view accepts only the get and head methods?\n": ["- [x] require_safe()\n", "- [ ] require_put()\n", "- [ ] require_post()\n", "- [ ] require_get()\n"], "#### Q36. How would you define the relation between a book and an author - book has only one author.\n": ["- [ ] <span>\n class Author (models.model):\n book=models.foreignkey(Book,on_delete=models.cascade)\n class Book(models.model):\n  name=models.charfield(max_length=100)\n", "- [x] <span>\n python\n class Author (models.model):\n name=models.charfield(max_length=100)\n  class Book(models.model):\n author=models.foreignkey(Author,on_delete=models.cascade)\n", "- [ ] <span>\n class Author (models.model):\n name=models.charfield(max_length=100)\n class Book(models.model):\n author=models.foreignkey(Author)\n", "- [ ] <span>\n class Author (models.model):\n name=models.charfield(max_length=100)\n class Book(models.model):\n author=models.foreignkey(Author,on_delete=models.cascade)\n","- [ ] <span>\n class Author (models.model):\n name=models.charfield(max_length=100)\n class Book(models.model):\n author=Author.name \n"], "#### Q37. What is a callable that takes a value and raises an error if the value fails?\n": ["- [x] validator\n", "- [ ] deodorizer\n", "- [ ] mediator\n", "- [ ] regular expression\n"], "#### Q38. To secure an API endpoint, making it accessible to registered users only, you can replace the rest_framework.permissions.allowAny value in the default_permissions section of your settings.py to\n": ["- [ ] rest_framework.permissions.IsAdminUser\n", "- [x] rest_framework.permissions.IsAuthenticated\n", "- [ ] rest_framework.permissions.IsAuthorized\n", "- [ ] rest_framework.permissions.IsRegistered\n"], "#### Q39. Which command would you use to apply a migration?\n": ["- [ ] makemigration\n", "- [ ] update_db\n", "- [ ] applymigration\n", "- [x] migrate\n"], "#### Q40. Which type of class allows QuerySets and model instances to be converted to native Python data types for use in APIs?\n": ["- [ ] objectwriters\n", "- [x] serializers\n", "- [ ] picklers\n", "- [ ] viewsets\n"], "#### Q41. How should the code end?\n { percentage if spark >= 50 percentage }\n Lots of spark\n {percentage elif spark == 42 percentage} \n": ["- [ ] { percentage else percentage}\n", "- [x] {percentage endif percentage}\n", "- [ ] Nothing needed\n", "- [ ] {percentage end percentage}\n"], "#### Q42. Which code block will create a serializer?\n from rest_framework import serializers\n from .models import Planet \n": ["- [x] <span>\n class PlanetSerializer(serializers.ModelSerializer):\n class Meta:\n model=Planet\n fields=('name','position', 'mass', 'rings')\n", "- [ ] <span>\n from rest_framework import serializers\n from .models import Planet \n  class PlanetSerializer():\n  class Meta:\n  fields=('name','position', 'mass', 'rings')\n model=Planet\n", "- [ ] <span>\n from django.db import serializers \n from .models import Planet\n  class PlanetSerializer(serializers.ModelSerializer):\n fields=('name','position', 'mass', 'rings')\n model=Sandwich\n", "- [ ] <span>\n from django.db import serializers\n from .models import Planet\n class PlanetSerializer(serializers.ModelSerializer):\n class Meta: \n fields=('name')\n model=Planet\n"], "#### Q43. Which class allows you to automatically create a Serializer class with fields and validators that correspond to your model's fields?\n": ["- [x] ModelSerializer\n", "- [ ] Model\n", "- [ ] DataSerializer\n", "- [ ] ModelToSerializer\n"], "#### Q44. Which command to access the built-in admin tool for the first time?\n": ["- [ ] django-admin setup\n", "- [ ] django-admin runserver\n", "- [ ] python manage.py createuser\n", "- [x] python manage.py createsuperuser\n"], "#### Q45. Virtual environments are for managing dependencies. Which granularity works best?\n": ["- [x] you should set up a new virtualenv for each Django project\n", "- [ ] They should not be used\n", "- [ ] Use the same venv for all your Django work\n", "- [ ] Use a new venv for each Django app\n"], "#### Q46. What executes various Django commands such as running a webserver or creating an app?\n": ["- [ ] migrate.py\n", "- [ ] wsgi.py\n", "- [x] manage.py\n", "- [ ] runserver\n"], "#### Q47. What do Django best practice suggest should be \"fat\"?\n": ["- [x] models\n", "- [ ] controllers\n", "- [ ] programmers\n", "- [ ] clients\n"], "#### Q48. Which is not part of Django's design philosophy?\n": ["- [ ] Loose Coupling\n", "- [ ] Less Code\n", "- [ ] Fast Development\n", "- [x] Implicit over explicit\n"], "#### Q49. What is the result of this template code?\n {{'live long and prosper'|truncate:3}}\n": ["- [x] live long and ...\n", "- [ ] live long and\n", "- [ ] a compilation error\n", "- [ ] liv\n"], "#### Q50. When does this code load data into memory?\n 1 sandwiches = Sandwich.objects.filter(is_vegan=True)\n 2 for sandwich in sandwiches:\n 3   print(sandwich.name + ' - ' + sandwich.spice_level)\n": ["- [ ] line 1\n", "- [x] It depends on how many results return by query.\n", "- [ ] It depends on cache.\n", "- [ ] line 2\n"], "#### Q51. You are building a web application using a React front end and a Django back end. For what will you need to provision?\\*\\*\n": ["- [ ] an NGINX web server\n", "- [ ] a NoSQL database\n", "- [ ] a larger hard drive\n", "- [ ] CORS middleware\n"], "#### Q52. To expose an existing model via an API endpoint, what do you need to implement?\\*\\*\n": ["- [ ] an HTTP request\n", "- [ ] a JSON object\n", "- [ ] a query\n", "- [x] a serializer\n"], "#### Q53. How would you stop Django from performing database table creation or deletion operations via migrations for a particular model?\\*\\*\n": ["- [ ] Run the `migrate` command with `--exclude=[model_name]`.\n", "- [ ] Move the model definition from `models.py` into its own file.\n", "- [x] Set `managed=False` inside the model.\n", "- [ ] Don't run the `migrate` command.\n"], "#### Q54. what method can you use to check if form data has changed when using a form instance?\n": ["- [x] has_changed()\n", "- [ ] its_changed()\n", "- [ ] has_updated()\n", "- [ ] None of This\n"], "#### Q55. What is WSGI?\n": ["- [x] a server\n", "- [ ] an interface specification\n", "- [ ] a Python module\n", "- [ ] a framework\n"], "#### Q56. Which generic view should be used for displaying the tittles of all Django Reinhardt's songs?\n": ["- [ ] DetailView\n", "- [ ] TittleView\n", "- [ ] SongView\n", "- [x] ListView\n"], "#### Q57. Which statement is most accurate, regarding using the default SQLite database on your local/development machine but Postgres in production\n": ["- [x] There's less chance of introducing bugs since SQLite already works out the box\n", "- [ ] It's fine, you just need to keep both instances synchronized\n", "- [ ] It's a bad idea and could lead to issues down the road\n", "- [ ] It's the most efficient way to build a project\n"], "#### Q58. Why might you want to write a custom model Manager?\n": ["- [ ] to perform database queries\n", "- [ ] to set up a database for testing\n", "- [x] to modify the initial QuerySet that the Manager returns\n", "- [ ] to filter the results that a database query returns\n"], "#### Q59. In Django, what are used to customize the data that is sent to the templates?\n": ["- [ ] models\n", "- [x] views\n", "- [ ] forms\n", "- [ ] serializers\n"], "#### Q60. To complete the conditional, what should this block of code end with?\n shell \n % if sparles >= 50 %\n Lots of sparkles! \n % elif sparkles == 42 %\n The answer to life, the universe, and everything\n": ["- [x] `% endif %`\n", "- [ ] Nothing else is needed.\n", "- [ ] `% end%`\n", "- [ ] `% else %`\n"], "#### Q61. When should you employ the POST method over the GET method for submitting data from a form?\n": ["- [x] when the data in the form may be sensitive\n", "- [ ] when you want the data to be cached\n", "- [ ] when you want to use your browser to help with debugging\n", "- [ ] when efficiency is important\n"], "#### Q62. What is a callable that takes a value and raises an error if the value fails to meet some criteria?\n": ["- [ ] mediator\n", "- [x] validator\n", "- [ ] regular expression\n", "- [ ] deodorizer\n"], "#### Q63. You are uploading a file to Django from a form and you want to save the received file as a field on a model object. You can simply assign the file object from**\\_to a field of type\\_\\_**in the model.\n": ["- [ ] request.META; FileField\n", "- [ ] request.FILES; BLOBField\n", "- [x] request.FILES; FileField\n", "- [ ] request.META.Files; CLOBField\n"], "#### Q64. What python module might be used to store the current state of a Django model in a file?\n": ["- [x] pickle\n", "- [ ] struct\n", "- [ ] marshal\n", "- [ ] serialize\n"], "#### Q65. To add a new app to an existing Django project, you must edit the **_ section of the _** file.\n": ["- [ ] ALLOWED_HOSTS; settings.py\n", "- [ ] APPS; manage.py\n", "- [x] INSTALLED_APPS; settings.py\n", "- [ ] TEMPLATES; urls.py\n"], "#### Q66. Which is not a third-party package commonly used for authentication?\n": ["- [ ] django-guardian\n", "- [ ] django-rest-auth\n", "- [ ] authtoken\n", "- [x] django-rest-framework-jwt\n"], "#### Q67. Which function in the django.urls package can help you avoid hardcoding URLS by generating a URL given the name of a view?\n": ["- [ ] get_script_prefix()\n", "- [ ] redirect()\n", "- [x] reverse()\n", "- [ ] resolve()\n"], "#### Q68. Which is Fictional HTTP request method?\n": ["- [ ] POST\n", "- [ ] PUT\n", "- [x] PAUSE\n", "- [ ] PATCH\n"], "#### Q69. Which helper function is not provided as a part of django.shortcuts package? ref-\n": ["- [x] render_to_request()\n", "- [ ] render()\n", "- [ ] redirect()\n", "- [ ] get_object_or_404()\n","[Reference](https://docs.djangoproject.com/en/4.0/topics/http/shortcuts/#:~:text=The%20package%20django.,controlled%20coupling%20for%20convenience's%20sake)\n"], "#### Q70. Which is a nonstandard place to store templates?\n": ["- [x] at the root level of a project\n", "- [ ] inside the application\n", "- [ ] in the database\n", "- [ ] on Github\n"], "#### Q71. If you left the 8080 off the command python manage.py runserver 8080 what port would Django use as default?\n": ["- [x] 8080\n", "- [ ] 80\n", "- [ ] 8000\n", "- [ ] It would fail to start"]}